[project]
name = "glassflow"
dynamic = ["version"]
description = "GlassFlow Clickhouse ETL Python SDK: Create GlassFlow pipelines between Kafka and ClickHouse"
authors = [
    {name = "GlassFlow", email = "hello@glassflow.dev"}
]
requires-python = ">=3.9"
readme = "README.md"
license = {text = "MIT"}
keywords = ["clickhouse", "etl", "kafka", "data-pipeline", "glassflow", "streaming", "data-engineering"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "httpx>=0.26.0",
    "mixpanel>=4.10.0",
    "pyyaml>=6.0.2",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
]
build = [
    "build>=1.0.0",
    "hatch>=1.0.0",
    "twine>=4.0.0",
]

[project.urls]
Homepage = "https://github.com/glassflow/glassflow-python-sdk"
Documentation = "https://glassflow.github.io/glassflow-python-sdk"
Repository = "https://github.com/glassflow/glassflow-python-sdk.git"
Issues = "https://github.com/glassflow/glassflow-python-sdk/issues"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "regex"
path = "VERSION"
pattern = "(?P<version>.+)"

[tool.hatch.build.targets.wheel]
packages = ["src/glassflow"]
include-paths = [
    "src/glassflow/",
    "README.md",
    "LICENSE"
] 

[tool.hatch.build]
exclude = [
    "tests",
    "secrets",
    ".venv",
    "*.json",
    "*.yml",
    "*.yaml"
]

[tool.ruff]
line-length = 88
target-version = "py39"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src/glassflow --cov-report=term-missing -p no:warnings"

[tool.coverage.run]
source = ["src/glassflow"]
data_file = ".coverage"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
